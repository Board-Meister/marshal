var c=class l{constructor(){this.renderCount=0;this.registered={};this.loaded={};this.tagMap={};this.scope={};this.instanceMap=new WeakMap;this.register({type:"module",entry:{name:"marshal",namespace:"boardmeister",version:l.version,source:this}})}static{this.version="1.0.0"}addScope(e,t){if(this.scope[e])throw new Error('Variable with name "'+e+'" already exists');this.scope[e]=t}render(){this.renderCount++}register(e){this.registered[this.getModuleConstraint(e)]=e}getModuleConstraint(e){return e.entry.namespace+"/"+e.entry.name}get(e){return this.loaded[e]??null}async load(){let e=await Promise.all(this.generateLoadGroups(await this.loadScopes()));e.forEach(this.tagModules.bind(this)),e.forEach(this.instantiateModule.bind(this)),this.updateTagModules()}async loadScopes(){let e={},t={};for(let r in this.registered){let s=this.registered[r];s.type==="scope"?t[r]=s:e[r]=s}let o=this.orderModules(t);for(let r of o){let s=await this.retrieveModulePromise(r),n=s.module,{module:a,config:i}=s;if(this.mapInstance(i,a),typeof n?.default=="object")for(let d in n?.default)this.addScope(d,n?.default[d])}return e}updateTagModules(){for(let e in this.tagMap)this.tagMap[e].forEach(o=>{o.module=this.get(this.getModuleConstraint(o.config))})}tagModules(e){(e.config.tags??[]).forEach(t=>{if(typeof this.tagMap[t]>"u"&&(this.tagMap[t]=[]),this.isESClass(e.module.default)){this.tagMap[t].push({config:e.config,module:e.module.default});return}this.tagMap[t].push(e)})}instantiateModule(e){let{module:t,config:o}=e;if(typeof t=="function"||!t.default||!this.isESClass(t.default))return this.mapInstance(o,t),t;let r=this.loadDependencies(t.default,o);if(r===!1)return this.mapInstance(o,t),t;let s=new t.default(...o.entry.arguments??[]);return typeof s.inject=="function"&&r&&s.inject(r),this.mapInstance(o,s),s}mapInstance(e,t){let o=this.getModuleConstraint(e);delete this.registered[o],this.loaded[o]=t,this.instanceMap.set(t,e)}getMappedInstance(e){return this.instanceMap.get(e)}loadDependencies(e,t){if(typeof e.inject!="object")return;let o=e.inject,r={};for(let s in o){if(this.isTag(o[s])){let a=o[s].substring(1);typeof this.tagMap[a]>"u"&&(this.tagMap[a]=[]),r[s]=this.tagMap[a];continue}let n=o[s];if(!this.loaded[n])return console.error("Module "+this.getModuleConstraint(t)+" could not be loaded due to missing dependency: "+n),!1;r[s]=this.loaded[n]}return r}isESClass(e){return typeof e=="function"&&Object.getOwnPropertyDescriptor(e,"prototype")?.writable===!1}orderModules(e){let t=[],o={},r=Object.keys(e).length**2;for(;!this.isObjectEmpty(e);){if(r--,r<0)throw console.warn("Not registered in load groups",e),new Error("Infinite dependency detected, stopping script...");e:for(let s in e){let n=e[s],a=n.requires??[];for(let i of a)if(!this.isTag(i)){if(!o[i]&&!e[i]&&!this.loaded[i])throw new Error("Module "+s+" is requesting not present dependency: "+i);if(e[i])continue e}t.push(n),delete e[s],o[s]=!0}}return t}generateLoadGroups(e){let t=[];return this.orderModules(e).forEach(o=>{t.push(this.retrieveModulePromise(o))}),t}isTag(e){return/^![^\W.].*$/.test(e)}async import(e,t={}){let o=String(Math.random().toString(36).substring(2)),r=Object.assign({},this.scope,t);window[o]=r;let s="";for(let u in r)s+="const "+u+' = window["'+o+'"]["'+u+'"];';let n=await(await fetch(e)).text();n=s+n;let a=new Blob([n],{type:"text/javascript"}),i=URL.createObjectURL(a),d=await import(i);return delete window[o],URL.revokeObjectURL(i),d}importModule(e){return typeof e.entry.source=="string"?this.import(e.entry.source):Promise.resolve(e.entry.source)}async retrieveModulePromise(e){return e.lazy?new Promise(t=>{t({module:()=>new Promise(o=>{this.importModule(e).then(r=>{o(this.instantiateModule({module:r,config:e}))})}),config:e})}):new Promise(t=>{this.importModule(e).then(o=>{t({module:o,config:e})})})}isObjectEmpty(e){for(let t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}};export{c as default};
